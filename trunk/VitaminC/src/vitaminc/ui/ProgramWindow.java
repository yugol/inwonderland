/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ProgramWindow.java
 *
 */
package vitaminc.ui;

import java.awt.BorderLayout;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JTextField;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import org.gjt.sp.jedit.buffer.JEditBuffer;
import vitaminc.Controller;

/**
 *
 * @author Iulian Goriac <iulian.goriac@gmail.com>
 */
public class ProgramWindow extends javax.swing.JFrame {

    public static final String DEFAULT_TITLE = "Program";
    private Controller controller;
    public final FeaturedTextArea codeEditor;
    private final JTextField statusBar;

    public void setController(Controller controller) {
        this.controller = controller;
    }

    /** Creates new form ProgramWindow */
    public ProgramWindow() {
        initComponents();
        setTitle(DEFAULT_TITLE);
        codeEditor = new FeaturedTextArea();
        statusBar = new JTextField();
        initComponents2();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setTitle("Program");
        setIconImage(Resources.programWindowIcon);
        setMinimumSize(new java.awt.Dimension(100, 100));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        controller.setProgramWindowVisible(false);
    }//GEN-LAST:event_formWindowClosing

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        codeEditor.requestFocusInWindow();
    }//GEN-LAST:event_formFocusGained

    private void initComponents2() {
        statusBar.setEditable(false);
        statusBar.setText(" Lin: - Col: -");
        statusBar.setFocusable(false);

        codeEditor.addCaretListener(new CaretListener() {

            public void caretUpdate(CaretEvent e) {
                JEditBuffer buff = codeEditor.getBuffer();
                int col = e.getDot();
                int lin = buff.getLineOfOffset(col);
                if (lin > 0) {
                    col -= buff.getLineEndOffset(lin - 1);
                }
                String pos = " Lin: " + (lin + 1) + "  Col: " + col;
                statusBar.setText(pos);

                controller.markDirty(buff.isDirty());
            }
        });

        codeEditor.addKeyListener(new KeyAdapter() {

            @Override
            public void keyPressed(KeyEvent e) {
                super.keyPressed(e);
                controller.checkAndHandleShortcut(e, this);
            }
        });

        BorderLayout layout = new BorderLayout();
        getContentPane().setLayout(layout);
        getContentPane().add(codeEditor, BorderLayout.CENTER);
        getContentPane().add(statusBar, BorderLayout.SOUTH);
        pack();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ProgramWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
